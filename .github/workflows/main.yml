name: my_first_pipeline

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

jobs:
  built_my_project:
    strategy:
      matrix:
        o_system: [macos-latest, ubuntu-latest]
    runs-on: ${{matrix.o_system}}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots package

      - name: print_if_build_success
        run: echo "Build on ${{matrix.o_system}} finished successfully!!"

      - run: mkdir art && cp target/*.jar art
      - uses: actions/upload-artifact@v3
        with:
          name: build_artefact
          path: art

      - name: print_if_artefact_success
        run: echo "Artefact was upload successfully!!"

  download_and_send_artefact:
    needs: built_my_project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: build_artefact
          path: art

      - name: Display structure of downloaded files
        run: ls -l
        working-directory: art

      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          document: art/*.jar

  linter:
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: egorsurikat/devops1:latest

  my_server:
    needs: docker
    runs-on: self-hosted
    steps:
      - name: docker_pull
        run: docker pull egorsurikat/devops1:latest
      - name: docker_run
        run: docker run -it egorsurikat/devops1:latest